{"ast":null,"code":"var _jsxFileName = \"/mnt/sda1/Documents/react-redux-login-signup-form/src/components/pages/Dashboard.tsx\";\n// libraries\nimport React from \"react\";\nimport { bindActionCreators } from \"redux\"; // hoc\n\nimport { connect } from \"react-redux\"; // types\n\n// actions\nimport { userActions } from \"../../actions\"; // components\n\nimport { Grid, Typography, Button } from \"@material-ui/core\";\n\nconst Dashboard = props => {\n  const handleLogout = () => {\n    // logout user\n    props.logout();\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    style: {\n      minHeight: \"100vh\",\n      padding: \"2rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    sm: 8,\n    md: 6,\n    lg: 4,\n    style: {\n      width: \"100%\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h2\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Hello \", props.auth.user ? props.auth.user.fullName : \"User\"), React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"text\",\n    type: \"submit\",\n    style: {\n      marginTop: \"2rem\"\n    },\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Logout\")), React.createElement(Typography, {\n    variant: \"caption\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"this is just a normal text to fill this blank area :)\"));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  logout: bindActionCreators(userActions.logout, dispatch)\n});\n\nconst connectedDashboard = connect(mapStateToProps, mapDispatchToProps)(Dashboard);\nexport { connectedDashboard as Dashboard };","map":{"version":3,"sources":["/mnt/sda1/Documents/react-redux-login-signup-form/src/components/pages/Dashboard.tsx"],"names":["React","bindActionCreators","connect","userActions","Grid","Typography","Button","Dashboard","props","handleLogout","logout","minHeight","padding","width","textAlign","auth","user","fullName","marginTop","mapStateToProps","state","authentication","mapDispatchToProps","dispatch","connectedDashboard"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,kBAAT,QAAmC,OAAnC,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AAGA;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CAEA;;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,QAAyC,mBAAzC;;AAKA,MAAMC,SAA0B,GAAIC,KAAD,IAAkB;AACnD,QAAMC,YAAY,GAAG,MAAM;AACzB;AACAD,IAAAA,KAAK,CAACE,MAAN;AACD,GAHD;;AAKA,SACE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAE,CAFX;AAGE,IAAA,SAAS,EAAC,QAHZ;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,OAAO,EAAC,QALV;AAME,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,OAAb;AAAsBC,MAAAA,OAAO,EAAE;AAA/B,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,EAAE,EAAE,CAJN;AAKE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,SAAS,EAAE;AAA5B,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSN,KAAK,CAACO,IAAN,CAAWC,IAAX,GAAkBR,KAAK,CAACO,IAAN,CAAWC,IAAX,CAAgBC,QAAlC,GAA6C,MADtD,CAPF,EAUE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAJT;AAKE,IAAA,OAAO,EAAET,YALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CARF,EA4BE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,SAApB;AAA8B,IAAA,SAAS,EAAC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DA5BF,CADF;AAkCD,CAxCD;;AAkDA,MAAMU,eAAe,GACnBC,KADsB,KAEA;AACtBL,EAAAA,IAAI,EAAEK,KAAK,CAACC;AADU,CAFA,CAAxB;;AAMA,MAAMC,kBAAkB,GACtBC,QADyB,KAEA;AACzBb,EAAAA,MAAM,EAAET,kBAAkB,CAACE,WAAW,CAACO,MAAb,EAAqBa,QAArB;AADD,CAFA,CAA3B;;AAMA,MAAMC,kBAAkB,GAAGtB,OAAO,CAChCiB,eADgC,EAEhCG,kBAFgC,CAAP,CAGzBf,SAHyB,CAA3B;AAIA,SAASiB,kBAAkB,IAAIjB,SAA/B","sourcesContent":["// libraries\nimport React from \"react\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { bindActionCreators } from \"redux\";\n\n// hoc\nimport { connect } from \"react-redux\";\n\n// types\nimport { AppActions, AuthState } from \"../../types\";\n\n// actions\nimport { userActions } from \"../../actions\";\n\n// components\nimport { Grid, Typography, Button } from \"@material-ui/core\";\nimport { AppState } from \"../../reducers\";\n\ntype Props = LinkStateToProps & LinkDispatchToProps;\n\nconst Dashboard: React.FC<Props> = (props: Props) => {\n  const handleLogout = () => {\n    // logout user\n    props.logout();\n  };\n\n  return (\n    <Grid\n      container\n      spacing={5}\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ minHeight: \"100vh\", padding: \"2rem\" }}\n    >\n      <Grid\n        item\n        sm={8}\n        md={6}\n        lg={4}\n        style={{ width: \"100%\", textAlign: \"center\" }}\n      >\n        <Typography variant=\"h2\" component=\"h2\">\n          Hello {props.auth.user ? props.auth.user.fullName : \"User\"}\n        </Typography>\n        <Button\n          color=\"secondary\"\n          variant=\"text\"\n          type=\"submit\"\n          style={{ marginTop: \"2rem\" }}\n          onClick={handleLogout}\n        >\n          Logout\n        </Button>\n      </Grid>\n      <Typography variant=\"caption\" component=\"p\">\n        this is just a normal text to fill this blank area :)\n      </Typography>\n    </Grid>\n  );\n};\n\ninterface LinkStateToProps {\n  auth: AuthState\n}\n\ninterface LinkDispatchToProps {\n  logout: () => void;\n}\n\nconst mapStateToProps = (\n  state: AppState,\n): LinkStateToProps => ({\n  auth: state.authentication\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<any, any, AppActions>\n): LinkDispatchToProps => ({\n  logout: bindActionCreators(userActions.logout, dispatch)\n});\n\nconst connectedDashboard = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard);\nexport { connectedDashboard as Dashboard };\n"]},"metadata":{},"sourceType":"module"}