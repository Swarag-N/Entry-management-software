{"ast":null,"code":"import _defineProperty from \"/mnt/sda1/Documents/react-redux-login-signup-form/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/mnt/sda1/Documents/react-redux-login-signup-form/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/sda1/Documents/react-redux-login-signup-form/src/components/SignupForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// libraries\nimport React, { useState } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles, createStyles } from \"@material-ui/core\"; // colors\n\nimport { green } from \"@material-ui/core/colors\"; // hoc\n\nimport { connect } from \"react-redux\"; // components\n\nimport { FormControl, FormGroup, FormControlLabel, Checkbox, Button, CircularProgress } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\"; // icons\n\n// actions\nimport { userActions } from \"../actions\"; // types\n\n// styles\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: \"relative\"\n  },\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12\n  }\n}));\n\nconst SignupForm = props => {\n  const classes = useStyles();\n\n  const _useState = useState({\n    fullName: \"\",\n    Hostemail: \"\",\n    Hostphone: \"\",\n    terms: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1]; // handle fields change event\n\n\n  const handleChange = prop => event => {\n    prop === \"terms\" ? setValues(_objectSpread({}, values, {\n      [prop]: event.target.checked\n    })) : setValues(_objectSpread({}, values, {\n      [prop]: event.target.value\n    }));\n  }; // handle password field\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showPassword = _useState4[0],\n        setShowPassword = _useState4[1];\n\n  const handlePasswordToggle = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  }; // handle form submit\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (values.terms) {\n      props.register(values);\n    } else {\n      // show error\n      alert(\"Please agree to terms and conditions first\");\n    }\n  };\n\n  return React.createElement(ValidatorForm, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    margin: \"dense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    label: \"Full Name\",\n    onChange: handleChange(\"fullName\"),\n    name: \"fullName\",\n    value: values.fullName,\n    validators: [\"required\"],\n    errorMessages: [\"this field is required.\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    margin: \"dense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    label: \"Email address\",\n    onChange: handleChange(\"Hostemail\"),\n    name: \"Hostmail\",\n    value: values.Hostemail,\n    validators: [\"required\", \"isEmail\"],\n    errorMessages: [\"this field is required.\", \"email is not valid.\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    margin: \"dense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    label: \"Phone Number\",\n    value: values.Hostphone,\n    onChange: handleChange(\"Hostphone\"),\n    name: \"password\",\n    validators: [\"required\"],\n    errorMessages: [\"this field is required.\", \"phone should be at least 10 characters.\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: values.terms,\n      onChange: handleChange(\"terms\"),\n      value: \"terms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }),\n    label: \"Agreed to terms and conditions?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    type: \"submit\",\n    disabled: props.reg.registering,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Signup\"), props.reg.registering && React.createElement(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  reg: state.registration\n});\n\nconst mapDispatchToProps = dispatch => ({\n  register: bindActionCreators(userActions.register, dispatch)\n});\n\nconst connectedSignupForm = connect(mapStateToProps, mapDispatchToProps)(SignupForm);\nexport { connectedSignupForm as SignupForm };","map":{"version":3,"sources":["/mnt/sda1/Documents/react-redux-login-signup-form/src/components/SignupForm.tsx"],"names":["React","useState","bindActionCreators","makeStyles","createStyles","green","connect","FormControl","FormGroup","FormControlLabel","Checkbox","Button","CircularProgress","ValidatorForm","TextValidator","userActions","useStyles","theme","root","display","alignItems","wrapper","margin","spacing","position","buttonProgress","color","top","left","marginTop","marginLeft","SignupForm","props","classes","fullName","Hostemail","Hostphone","terms","values","setValues","handleChange","prop","event","target","checked","value","showPassword","setShowPassword","handlePasswordToggle","handleMouseDownPassword","preventDefault","handleSubmit","register","alert","reg","registering","mapStateToProps","state","registration","mapDispatchToProps","dispatch","connectedSignupForm"],"mappings":"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","sourcesContent":["// libraries\nimport React, { useState, useEffect } from \"react\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core\";\n\n// colors\nimport { green } from \"@material-ui/core/colors\";\n\n// hoc\nimport { connect } from \"react-redux\";\n\n// components\nimport {\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  InputAdornment,\n  IconButton,\n  Button,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n\n// icons\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\n\n// actions\nimport { userActions } from \"../actions\";\n\n// types\nimport { AppState } from \"../reducers\";\nimport { AppActions, RegisterState } from \"../types\";\n\n// styles\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    wrapper: {\n      margin: theme.spacing(1),\n      position: \"relative\"\n    },\n    buttonProgress: {\n      color: green[500],\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      marginTop: -12,\n      marginLeft: -12\n    }\n  })\n);\n\ntype SignupFormState = {\n  fullName: string;\n  Hostemail: string;\n  Hostphone: string;\n  terms: boolean;\n};\n\ntype Props = LinkDispatchToProps & LinkStateToProps;\n\nconst SignupForm: React.FC<Props> = (props: Props) => {\n  const classes = useStyles();\n\n  const [values, setValues] = useState<SignupFormState>({\n    fullName: \"\",\n    Hostemail: \"\",\n    Hostphone: \"\",\n    terms: false\n  });\n\n  // handle fields change event\n  const handleChange = (prop: keyof SignupFormState) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    prop === \"terms\"\n      ? setValues({ ...values, [prop]: event.target.checked })\n      : setValues({ ...values, [prop]: event.target.value });\n  };\n\n  // handle password field\n  const [showPassword, setShowPassword] = useState(false);\n  const handlePasswordToggle = () => {\n    setShowPassword(!showPassword);\n  };\n  const handleMouseDownPassword = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault();\n  };\n\n  // handle form submit\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n\n    if (values.terms) {\n      props.register(values);\n    } else {\n      // show error\n      alert(\"Please agree to terms and conditions first\");\n    }\n  };\n\n\n\n  return (\n    <ValidatorForm onSubmit={handleSubmit}>\n      <FormGroup>\n        {/* full name input field */}\n        <FormControl margin=\"dense\">\n          <TextValidator\n            label=\"Full Name\"\n            onChange={handleChange(\"fullName\")}\n            name=\"fullName\"\n            value={values.fullName}\n            validators={[\"required\"]}\n            errorMessages={[\"this field is required.\"]}\n          />\n        </FormControl>\n\n        {/* email input field */}\n        <FormControl margin=\"dense\">\n          <TextValidator\n            label=\"Email address\"\n            onChange={handleChange(\"Hostemail\")}\n            name=\"Hostmail\"\n            value={values.Hostemail}\n            validators={[\"required\", \"isEmail\"]}\n            errorMessages={[\"this field is required.\", \"email is not valid.\"]}\n          />\n        </FormControl>\n\n        {/* password input field */}\n        <FormControl margin=\"dense\">\n          <TextValidator\n            label=\"Phone Number\"\n            value={values.Hostphone}\n            onChange={handleChange(\"Hostphone\")}\n            name=\"password\"\n            validators={[\"required\"]}\n            errorMessages={[\n              \"this field is required.\",\n              \"phone should be at least 10 characters.\"\n            ]}\n            \n          />\n        </FormControl>\n\n        {/* remember me input */}\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.terms}\n              onChange={handleChange(\"terms\")}\n              value=\"terms\"\n            />\n          }\n          label=\"Agreed to terms and conditions?\"\n        />\n\n        {/* submit form button */}\n        <FormControl>\n          <FormControl>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={props.reg.registering}\n            >\n              Signup\n            </Button>\n            {props.reg.registering && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n          </FormControl>\n        </FormControl>\n      </FormGroup>\n    </ValidatorForm>\n  );\n};\n\ninterface LinkStateToProps {\n  reg: RegisterState;\n}\n\ninterface LinkDispatchToProps {\n  register: ({\n    fullName,\n    Hostemail,\n    Hostphone\n  }: {\n    fullName: string;\n    Hostemail: string;\n    Hostphone: string;\n  }) => void;\n}\n\nconst mapStateToProps = (state: AppState): LinkStateToProps => ({\n  reg: state.registration\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<any, any, AppActions>\n): LinkDispatchToProps => ({\n  register: bindActionCreators(userActions.register, dispatch)\n});\n\nconst connectedSignupForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignupForm);\nexport { connectedSignupForm as SignupForm };\n"]},"metadata":{},"sourceType":"module"}